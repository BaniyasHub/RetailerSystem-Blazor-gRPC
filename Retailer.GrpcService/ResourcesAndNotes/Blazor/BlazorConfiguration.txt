

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

After the host is built, services are available from the root DI scope before any components are rendered. This can be useful for running initialization logic before rendering content:

var builder = WebAssemblyHostBuilder.CreateDefault(args);
...
builder.Services.AddSingleton<WeatherService>();
...

var host = builder.Build();

var weatherService = host.Services.GetRequiredService<WeatherService>();
await weatherService.InitializeWeatherAsync(
    host.Configuration["WeatherServiceUrl"]);

await host.RunAsync();
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Some built-in services and their lifecycles in WASM


HttpClient			Scoped
IJSRuntime			Singleton
NavigationManager	Singleton

Blazor WebAssembly apps don't currently have a concept of DI scopes. Scoped-registered services behave like Singleton services.

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



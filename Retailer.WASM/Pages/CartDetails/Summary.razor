@page "/summary"
@inject IProductService _productService
@inject ILocalStorageService _localStorageService
@inject NavigationManager _navigationManager
@inject ICartService _cartService
@inject IJSRuntime _jsRuntime

<h3>Summary</h3>
<div class="mt-4 mx-4 px-md-5 mx-md-5 p-1">
    @if (isProcessing)
    {
        <div class="text-center">
            <img src="/images/loading.gif" />
        </div>
    }
    else
    {
        <div class="row p-2 my-3">
            <div class="col-12 col-lg-7 p-4">
                <div class="row px-2 text-success ">
                    <div class="col-8 py-1"><p style="font-size:x-large;margin:0px;">Order Summary</p></div>
                    <div class="col-4 p-0" style="text-align:right">
                        <a href="/cart" class="btn btn-secondary btn-block">Back to cart</a>
                    </div>
                </div>

                <div class="row border p-1 m-1">
                    @foreach (var cart in shoppingCarts)
                    {
                        <div class="col-3 col-md-2 ">
                            <img src="@cart.Product.ImageUrl" width="100%">
                        </div>
                        <div class="col-5 col-md-5 ">
                            <span class="">Product : @cart.Product.Name</span><br />
                            <span class="pt-1">Size : @cart.ProductPrice.Size</span><br />
                            <span class="pt-1">Count : @cart.Count</span><br />
                        </div>
                        <div class="col-4 col-md-5 " style="text-align:right;">
                            <h4 class="text-warning font-weight-bold pt-2">
                                USD
                                <span style="border-bottom:1px solid #ff6a00">
                                    @((cart.Count*cart.ProductPrice.Price).ToString("c"))
                                </span>
                            </h4>
                        </div>
                    }

                </div>
                <div class="row" style="text-align:right">
                    <div class="col-12 px-3">
                        <h3> Order Total : <span class="text-secondary">@orderTotal.ToString("c")</span> </h3>
                    </div>
                </div>
            </div>

            <div class="col-12 col-lg-5 p-4 ml-4 ml-md-0 mt-4 mt-md-0 border">
                <EditForm Model="order" OnValidSubmit="SubmitOrder">
                    <div class="row px-2 text-success border-bottom"><div class="col-7 py-1"><p style="font-size:x-large;margin:0px;">Enter Details</p></div></div>

                    <div class="form-group pt-2">
                        <label class="text-warning">Name</label>
                        <InputText @bind-Value="order.OrderHeader.Name" type="text" class="form-control" />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Phone</label>
                        <InputText @bind-Value="order.OrderHeader.PhoneNumber" type="text" class="form-control" />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Email</label>
                        <InputText @bind-Value="order.OrderHeader.Email" type="text" class="form-control" />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Street Address</label>
                        <InputText @bind-Value="order.OrderHeader.StreetAddress" type="text" class="form-control" />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">City</label>
                        <InputText @bind-Value="order.OrderHeader.City" type="text" class="form-control" />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">State</label>
                        <InputText @bind-Value="order.OrderHeader.State" type="text" class="form-control" />
                    </div>
                    <div class="form-group pt-2">
                        <label class="text-warning">Postal Code</label>
                        <InputText @bind-Value="order.OrderHeader.PostalCode" type="text" class="form-control" />
                    </div>


                    <div class="form-group pt-2">
                        <button type="submit" class="btn btn-success form-control">Checkout Now</button>
                    </div>
                </EditForm>
            </div>
        </div>
    }

</div>


@code {
    public bool isProcessing { get; set; }
    public OrderDto order { get; set; } = new();
    public List<ProductDto> productList { get; set; } = new();
    private List<ShoppingCart> shoppingCarts { get; set; } = new();
    public double orderTotal { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await LoadCart();
    }

    public async Task LoadCart()
    {
        isProcessing = true;
        StateHasChanged();
        orderTotal = 0;
        shoppingCarts = await _localStorageService.GetItemAsync<List<ShoppingCart>>(SD.ShoppingCart);

        productList = await _productService.GetAllProducts();

        foreach (var shoppingCart in shoppingCarts)
        {
            shoppingCart.Product = productList.FirstOrDefault(x => x.Id == shoppingCart.ProductId);
            shoppingCart.ProductPrice = shoppingCart.Product.ProductPriceList.FirstOrDefault(x => x.Id == shoppingCart.ProductPriceId);
            orderTotal += shoppingCart.ProductPrice.Price * shoppingCart.Count;

            OrderDetailDto orderDetail = new OrderDetailDto
                {
                    ProductId = shoppingCart.Product.Id,
                    Size = shoppingCart.ProductPrice.Size,
                    Count = shoppingCart.Count,
                    Price = shoppingCart.ProductPrice.Price,
                    ProductName = shoppingCart.Product.Name,
                    Product = shoppingCart.Product
                };

            order.OrderDetails.Add(orderDetail);
        }

        order.OrderHeader.OrderTotal = orderTotal;

        isProcessing = false;
        StateHasChanged();
    }

    public async Task SubmitOrder()
    {

    }

}

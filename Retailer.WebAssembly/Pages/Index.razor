@page "/"
@inject IProductService _productService

<PageTitle>Index</PageTitle>


@if (isProcessing)
{
    <div style="position:fixed;top:50%;left:50%;margin-top:-50px;margin-left:-100px;">
        <img src="images/ajax-loader.gif" />
    </div>

}
else
{
    <div class="container">


        <div class="row  pb-3 pt-3 backgroundWhite">
            <Virtualize Items="productList.Select(x=>x.Category.Name).Distinct().ToList()" Context="category">

                <h2 class="text-success pl-1"><b>@category</b></h2>

               <Virtualize Items="productList.Where(x=>x.Category.Name == category).ToList()" Context="product"><div class="col-lg-4 col-md-6 pb-4 filter">
                    <div class="card bg-white rounded shadow-sm" style="border:1px solid #222">
                        <div class="card-body pb-1 row">
                            <div class="col-8 h5">@product.Name</div>
                            <div class="col-4 text-end"><span class="text-info h4">
                                @product.ProductPriceList?.OrderBy(x=>x.Price).FirstOrDefault()?.Price.ToString("c")
                            </span></div>
                        </div>

                        <img class="card-img-top img-fluid d-block mx-auto mb-3" src="@product.ImageUrl" alt="menuitem image">
                        <div class="card-body p-1 px-3 row">
                            <div class="col-6">
                                <span class="badge p-2 border w-100 text-dark bg-warning ">@product.Category.Name</span>
                            </div>
                            <div class="col-6 border-0">
                                <span class="badge p-2 border w-100 bg-info ">@product.Color</span>
                            </div>
                            <div class="col-12 pt-2" style="font-size:13px; text-align:justify">
                                <p>@product.Description</p>
                            </div>
                            <div class="col-12 p-1">
                                <a href="" class="btn btn-dark form-control btn-sm p-2" style="height:40px">View Details</a>
                            </div>
                        </div>
                    </div>
                </div>
               </Virtualize>

                
            </Virtualize>

        </div>

    </div>

}



@code {

    public bool isProcessing { get; set; }

    public List<ProductDto> productList { get; set; } = new();

    protected async override Task OnInitializedAsync()
    {
        isProcessing = true;
        StateHasChanged();

        productList = await _productService.GetAllProducts();

        isProcessing = false;
        StateHasChanged();
    }
}                        